services:
    php:
        container_name: php
        image: ${IMAGES_PREFIX:-}app-php
        restart: unless-stopped
        environment:
            SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
            DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
        volumes:
            - caddy_data:/data
            - caddy_config:/config
        ports:
            # HTTP
            - target: 80
              published: ${HTTP_PORT:-80}
              protocol: tcp
            # HTTPS
            - target: 443
              published: ${HTTPS_PORT:-443}
              protocol: tcp
            # HTTP/3
            - target: 443
              published: ${HTTP3_PORT:-443}
              protocol: udp
        networks:
            - monitoring
    
    database:
        container_name: database
        image: postgres:${POSTGRES_VERSION:-16}-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-app}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
            POSTGRES_USER: ${POSTGRES_USER:-app}
        healthcheck:
            test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
            timeout: 5s
            retries: 5
            start_period: 60s
        volumes:
            - database_data:/var/lib/postgresql/data:rw
        networks:
            - monitoring
    
    grafana-agent:
        image: grafana/agent
        container_name: grafana-agent
        volumes:
            - ./grafana-agent.yml:/etc/agent-config.yml
        command: -config.file=/etc/agent-config.yml
        networks:
            - monitoring

volumes:
    caddy_data:
    caddy_config:
    database_data:

networks:
    monitoring:
        driver: bridge
